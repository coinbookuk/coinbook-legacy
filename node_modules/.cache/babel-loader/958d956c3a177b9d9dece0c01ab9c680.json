{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Coinbook-master/src/components/Settings/CurrencySettings.js\";\nimport React from \"react\";\nimport \"./CurrencySettings.css\";\nexport default class CurrencySettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: this.props.currencies,\n      settingsOptions: this.props.settingsOptions\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n    const {\n      currencies,\n      settingsOptions\n    } = this.state;\n\n    if (width > 768) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"dropbtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDCB7\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, currencies.map(currency => /*#__PURE__*/React.createElement(\"a\", {\n        \"data-item\": currency,\n        onClick: this.props.onClick,\n        value: this.props.inputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, currency.toUpperCase())))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"dropbtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDC8E\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, settingsOptions.map(setting => /*#__PURE__*/React.createElement(\"a\", {\n        \"data-item\": setting,\n        onClick: this.props.settings,\n        value: this.props.inputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, setting)))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: themeToggler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDD26\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, settingsOptions.map(setting => /*#__PURE__*/React.createElement(\"a\", {\n        \"data-item\": setting,\n        onClick: this.props.settings,\n        value: this.props.inputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, setting)))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"dropbtn1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDCB7\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown-content\",\n        id: \"dropdown-content-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, currencies.map(currency => /*#__PURE__*/React.createElement(\"a\", {\n        \"data-item\": currency,\n        onClick: this.props.onClick,\n        value: this.props.inputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, currency.toUpperCase())))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"dropbtn2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDC8E\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown-content\",\n        id: \"dropdown-content-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, settingsOptions.map(setting => /*#__PURE__*/React.createElement(\"a\", {\n        \"data-item\": setting,\n        onClick: this.props.settings,\n        value: this.props.inputValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, setting)))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/amit/Desktop/Coinbook-master/src/components/Settings/CurrencySettings.js"],"names":["React","CurrencySettings","Component","constructor","props","state","currencies","settingsOptions","render","width","window","innerWidth","map","currency","onClick","inputValue","toUpperCase","setting","settings","themeToggler"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CurrencySettings.css\";\n\nexport default class CurrencySettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: this.props.currencies,\n      settingsOptions: this.props.settingsOptions,\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n    const { currencies, settingsOptions } = this.state;\n    if (width > 768) {\n      return (\n        <span className=\"settings\">\n          <div class=\"dropdown\">\n            <button class=\"dropbtn\">💷</button>\n            <div class=\"dropdown-content\">\n              {currencies.map((currency) => (\n                <a\n                  data-item={currency}\n                  onClick={this.props.onClick}\n                  value={this.props.inputValue}\n                >\n                  {currency.toUpperCase()}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button class=\"dropbtn\">💎</button>\n            <div class=\"dropdown-content\">\n              {settingsOptions.map((setting) => (\n                <a\n                  data-item={setting}\n                  onClick={this.props.settings}\n                  value={this.props.inputValue}\n                >\n                  {setting}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button onClick={themeToggler}>🔦</button>\n            <div class=\"dropdown-content\">\n              {settingsOptions.map((setting) => (\n                <a\n                  data-item={setting}\n                  onClick={this.props.settings}\n                  value={this.props.inputValue}\n                >\n                  {setting}\n                </a>\n              ))}\n            </div>\n          </div>\n        </span>\n      );\n    } else {\n      return (\n        <div className=\"settings\">\n          <div class=\"dropdown\">\n            <button class=\"dropbtn1\">💷</button>\n            <div class=\"dropdown-content\" id=\"dropdown-content-1\">\n              {currencies.map((currency) => (\n                <a\n                  data-item={currency}\n                  onClick={this.props.onClick}\n                  value={this.props.inputValue}\n                >\n                  {currency.toUpperCase()}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button class=\"dropbtn2\">💎</button>\n            <div class=\"dropdown-content\" id=\"dropdown-content-2\">\n              {settingsOptions.map((setting) => (\n                <a\n                  data-item={setting}\n                  onClick={this.props.settings}\n                  value={this.props.inputValue}\n                >\n                  {setting}\n                </a>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}