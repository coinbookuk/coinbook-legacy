[{"/Users/amit/Desktop/Coinbook-master/src/index.js":"1","/Users/amit/Desktop/Coinbook-master/src/App.js":"2","/Users/amit/Desktop/Coinbook-master/src/serviceWorker.js":"3","/Users/amit/Desktop/Coinbook-master/src/components/Cards/Cards.js":"4","/Users/amit/Desktop/Coinbook-master/src/components/MoonPayCheckWhichCoins.js":"5","/Users/amit/Desktop/Coinbook-master/src/components/CustomizedTable/CustomizedTables.js":"6","/Users/amit/Desktop/Coinbook-master/src/components/SearchBar/SearchBar.js":"7","/Users/amit/Desktop/Coinbook-master/src/components/Settings/CurrencySettings.js":"8","/Users/amit/Desktop/Coinbook-master/src/components/MoonPayPopup.js":"9","/Users/amit/Desktop/Coinbook-master/src/components/PageSettings/pageSettings.js":"10","/Users/amit/Desktop/Coinbook-master/src/components/Chart/Chart.js":"11"},{"size":503,"mtime":1603550087000,"results":"12","hashOfConfig":"13"},{"size":17786,"mtime":1626441255194,"results":"14","hashOfConfig":"13"},{"size":5086,"mtime":1603550087000,"results":"15","hashOfConfig":"13"},{"size":4820,"mtime":1626460100969,"results":"16","hashOfConfig":"13"},{"size":448,"mtime":1603550087000,"results":"17","hashOfConfig":"13"},{"size":15327,"mtime":1626468479935,"results":"18","hashOfConfig":"13"},{"size":863,"mtime":1621473650801,"results":"19","hashOfConfig":"13"},{"size":2909,"mtime":1626470080323,"results":"20","hashOfConfig":"13"},{"size":2163,"mtime":1624524316211,"results":"21","hashOfConfig":"13"},{"size":1316,"mtime":1626356997113,"results":"22","hashOfConfig":"13"},{"size":8920,"mtime":1626457608527,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"4dwul1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":10,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"26"},"/Users/amit/Desktop/Coinbook-master/src/index.js",[],["55","56"],"/Users/amit/Desktop/Coinbook-master/src/App.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React from \"react\";\nimport logo from \"./logoheader.svg\";\nimport \"./App.css\";\nimport CustomizedTables from \"./components/CustomizedTable/CustomizedTables.js\";\nimport Cards from \"./components/Cards/Cards.js\";\nimport SearchBar from \"./components/SearchBar/SearchBar.js\";\nimport { MoonPayCheckWhichCoins } from \"./components/MoonPayCheckWhichCoins.js\";\nimport axios from \"axios\";\nimport CurrencySettings from \"./components/Settings/CurrencySettings.js\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      searchOn: false,\n      value: \"\",\n      isLoaded: false,\n      coins: [],\n      coinsForCard: [],\n      rawCoins: [],\n      coinsOnMoonPay: [],\n      currencies: [\n        \"gbp\",\n        \"btc\",\n        \"eth\",\n        \"usd\",\n        \"aud\",\n        \"cad\",\n        \"eur\",\n        \"rub\",\n        \"idr\",\n        \"krw\",\n        \"cny\",\n        \"thb\",\n      ],\n      settings: [\"Coming Soon\"],\n      settingsAPIParam: {\n        All: \"all\",\n      },\n      currencySymbols: {\n        GBP: \"£\", // British Pound Sterling\n        EUR: \"€\", // Euro\n        CRC: \"₡\", // Costa Rican Colón\n        USD: \"$\", // US Dollar\n        ILS: \"₪\", // Israeli New Sheqel\n        INR: \"₹\", // Indian Rupee\n        JPY: \"¥\", // Japanese Yen\n        KRW: \"₩\", // South Korean Won\n        NGN: \"₦\", // Nigerian Naira\n        PHP: \"₱\", // Philippine Peso\n        PLN: \"zł\", // Polish Zloty\n        PYG: \"₲\", // Paraguayan Guarani\n        THB: \"฿\", // Thai Baht\n        AUD: \"$\",\n        CAD: \"$\",\n        RUB: \"₽\",\n        IDR: \"Rp\",\n        CNY: \"¥\",\n        BTC: \"₿\",\n        ETH: \"Ξ\",\n      },\n      currency: \"gbp\",\n      currencySymbol: \"£\",\n      dataSettings: \"all\",\n      pageNumber: 1,\n      pageSettings: [0, 10],\n      orderSelection: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleCurrencyClick = this.handleCurrencyClick.bind(this);\n    this.handleSettingsClick = this.handleSettingsClick.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handleTableHeaderClick = this.handleTableHeaderClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.localStorage();\n    let currencyState = this.state.currency;\n    let settings = this.state.settingsAPIParam[this.state.dataSettings];\n    function checkLocalStorageC() {\n      if (localStorage.getItem(\"currency\") !== null) {\n        return localStorage.getItem(\"currency\");\n      } else {\n        return currencyState;\n      }\n    }\n    function checkLocalStorageS() {\n      if (localStorage.getItem(\"dataSettings\") !== null) {\n        return localStorage.getItem(\"dataSettings\");\n      } else {\n        return settings;\n      }\n    }\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${checkLocalStorageC()}&order=market_cap_desc&per_page=350&page=1&sparkline=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            coins: result.slice(\n              this.state.pageSettings[0],\n              this.state.pageSettings[1]\n            ),\n            rawCoins: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n    axios\n      .get(\n        `https://api.moonpay.io/v3/currencies?apiKey=pk_test_XYlfn9ISmwfjwReteBLpiN1TdSDV7Pw7`\n      )\n      .then((res) => {\n        let allNames = [];\n        for (let i = 0; res.data.length > i; i++) {\n          allNames.push(res.data[i].name.toLowerCase());\n        }\n        console.log(allNames);\n        this.setState({\n          coinsOnMoonPay: allNames,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  updateData(currency, settingsAllorDefi) {\n    let settings = this.state.settingsAPIParam[this.state.dataSettings];\n    function checkLocalStorageC() {\n      if (localStorage.getItem(\"currency\") !== null) {\n        return localStorage.getItem(\"currency\");\n      } else {\n        return this.state.currency;\n      }\n    }\n    function checkLocalStorageS() {\n      if (localStorage.getItem(\"dataSettings\") !== null) {\n        return localStorage.getItem(\"dataSettings\");\n      } else {\n        return settings;\n      }\n    }\n    console.log(settingsAllorDefi);\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${checkLocalStorageC()}&order=market_cap_desc&per_page=350&page=1&sparkline=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            coins: result.slice(\n              this.state.pageSettings[0],\n              this.state.pageSettings[1]\n            ),\n            rawCoins: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  localStorage() {\n    if (localStorage.getItem(\"currency\") !== null) {\n      this.setState({\n        currency: localStorage.getItem(\"currency\"),\n      });\n    }\n\n    if (localStorage.getItem(\"dataSettings\") !== null) {\n      this.setState({\n        dataSettings: localStorage.getItem(\"dataSettings\"),\n      });\n    }\n  }\n\n  onChange(e) {\n    const allCoins = this.state.rawCoins;\n    this.setState({\n      value: e.target.value,\n    });\n    // if searchbar is empty then show all the coins\n    if (e.target.value == \"\") {\n      this.setState({\n        coins: allCoins.slice(\n          this.state.pageSettings[0],\n          this.state.pageSettings[1]\n        ),\n      });\n      // if backspace on searchbar then table renders all coins\n    } else if (e.target.value.length < this.state.value.length) {\n      {\n        let searcjQery = e.target.value.toLowerCase(),\n          displayedCoins = allCoins.filter((el) => {\n            let searchValue = el.name.toLowerCase();\n\n            return searchValue.indexOf(searcjQery) !== -1;\n          });\n        this.setState({\n          coins: allCoins.slice(\n            this.state.pageSettings[0],\n            this.state.pageSettings[1]\n          ),\n        });\n      }\n      // if something has been entered on the searchbar then it searches through the coins array taking name and symbol into account\n    } else if (e.target.value !== this.state.value) {\n      {\n        let searcjQery = e.target.value.toLowerCase(),\n          displayedCoins = allCoins.filter((el) => {\n            let searchValue = el.name\n              .toLowerCase()\n              .concat(el.symbol.toLowerCase());\n            let searchBy = searchValue.indexOf(searcjQery) !== -1;\n            return searchBy;\n          });\n        this.setState({\n          coins: displayedCoins,\n        });\n      }\n    }\n  }\n  handleTableHeaderClick(e) {\n    const header = e.currentTarget.getAttribute(\"data-item\");\n    console.log(\"coins being managed\" + this.state.pageSettings);\n    if (header === this.state.orderSelection) {\n      const allCoins = this.state.rawCoins;\n      this.setState({\n        coins: allCoins.slice(\n          this.state.pageSettings[0],\n          this.state.pageSettings[1]\n        ),\n        orderSelection: \"\",\n      });\n    } else if (header === \"price_change_percentage_24h\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) =>\n          parseFloat(b.price_change_percentage_24h) -\n          parseFloat(a.price_change_percentage_24h)\n      );\n      console.log(coinOrderByPrice);\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"total_volume\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(b.total_volume) - parseFloat(a.total_volume)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"current_price\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(b.current_price) - parseFloat(a.current_price)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"market_cap\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(b.market_cap) - parseFloat(a.market_cap)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"market_cap_rank\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(a.market_cap_rank) - parseFloat(b.market_cap_rank)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    }\n  }\n  handleCurrencyClick(e) {\n    this.setState({\n      currency: e.currentTarget.getAttribute(\"data-item\"),\n    });\n    localStorage.setItem(\"currency\", e.currentTarget.getAttribute(\"data-item\"));\n    return this.updateData(\n      e.currentTarget.getAttribute(\"data-item\"),\n      this.state.dataSettings\n    );\n  }\n  handleSettingsClick(e) {\n    this.setState({\n      dataSettings: this.state.settingsAPIParam[\n        e.currentTarget.getAttribute(\"data-item\")\n      ],\n      pageNumber: 1,\n      pageSettings: [0, 10],\n      orderSelection: \"\",\n    });\n    localStorage.setItem(\n      \"dataSettings\",\n      this.state.settingsAPIParam[e.currentTarget.getAttribute(\"data-item\")]\n    );\n\n    return this.updateData(\n      this.state.currency,\n      this.state.settingsAPIParam[e.currentTarget.getAttribute(\"data-item\")]\n    );\n  }\n  handlePageChange(e) {\n    const allCoins = this.state.rawCoins;\n    if (e === \"up\") {\n      const number = this.state.pageSettings.map(function (value) {\n        return value + 10;\n      });\n      this.setState({\n        pageNumber: this.state.pageNumber + 1,\n        pageSettings: number,\n        coins: allCoins.slice(number[0], number[1]),\n      });\n    } else if (e === \"down\") {\n      const number = this.state.pageSettings.map(function (value) {\n        return value - 10;\n      });\n      this.setState({\n        pageNumber: this.state.pageNumber - 1,\n        pageSettings: number,\n        coins: allCoins.slice(number[0], number[1]),\n      });\n    }\n  }\n\n  render() {\n    let width = window.innerWidth;\n    if (width > 768) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"row\">\n            <p className=\"footer-title\"style={{ backgroundColor: '#' }}>\n               <a target=\"_blank\" href=\"https://www.binance.com/en/register?ref=BC0PJGIM/\"style={{ color: '#FFFFFF' }}>Sign up to Binance and earn back 10% commission on all your trades</a>\n            </p>\n            </div>\n            <div className=\"row\">\n              <h1 classname=\"logo-text\">\n                <img className=\"brain\" src={logo} /> Coinbook.co.uk\n              </h1>\n            </div>\n          </header>\n          <body className=\"App-body\">\n            <Cards\n              currency={this.state.currency}\n              currency_symbols={this.state.currencySymbols}\n              data={this.state}\n            />\n            <div style={{ width: 500 }}></div>\n\n            <div>\n              <SearchBar\n                inputValue={this.state.value}\n                onChange={this.onChange}\n              />\n              <span>\n                <CurrencySettings\n                  currencies={this.state.currencies}\n                  settings={this.handleSettingsClick}\n                  settingsOptions={this.state.settings}\n                  onClick={this.handleCurrencyClick}\n                  inputValue={this.state.currency}\n                />\n              </span>\n            </div>\n\n            <div>\n              <CustomizedTables\n                coins={this.state}\n                currency={this.state.currency}\n                currency_symbols={this.state.currencySymbols}\n                settings={this.state.settingsData}\n                pageNumber={this.state.pageNumber}\n                pageSettings={this.state.pageSettings}\n                onClick={this.handlePageChange}\n                searchValue={this.state.value}\n                handleTableHeaderClick={this.handleTableHeaderClick}\n                orderSelection={this.state.orderSelection}\n                coinsOnMoonPay={this.state.coinsOnMoonPay}\n              />\n            </div>\n\n            <div></div>\n          </body>\n          <footer className=\"App-footer\">\n            <div className=\"donate\">\n              <p className=\"footer-title\">Donations ❤️</p>\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://www.blockchain.com/btc/address/14Z6pUMZikKGcuBDxxSMHSmrhcUwrAHcNs/\"style={{ color: '#FFFFFF' }}>Bitcoin: 14Z6pUMZikKGcuBDxxSMHSmrhcUwrAHcNs</a>\n              </p>\n\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://etherscan.io/address/0xe44400ea92cD298FA05D7a901362530EC2A51C34/\"style={{ color: '#FFFFFF' }}>Ethereum: 0xe44400ea92cD298FA05D7a901362530EC2A51C34</a>\n              </p>\n\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://bscscan.com/search?f=0&q=bnb1udd4c7dsxrf2gjca9w6y3yau2wujnvxzd8vzla/\"style={{ color: '#FFFFFF' }}>BNB: bnb1udd4c7dsxrf2gjca9w6y3yau2wujnvxzd8vzla</a>\n              </p>\n\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://xrpscan.com/account/rfsGFqq8ZHTEbUs3ibvbTVZN8LnvZNT2UY/\"style={{ color: '#FFFFFF' }}>XRP: rfsGFqq8ZHTEbUs3ibvbTVZN8LnvZNT2UY</a>\n              </p>\n\n              <p className=\"footer-title\">\n                Brave Verified Creator\n              </p>\n            </div>\n          </footer>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"row\">\n              <h1 classname=\"logo-text\">\n                <img className=\"brain\" src={logo} /> <br />\n                Coinbook\n              </h1>\n            </div>\n            <div className=\"row\">\n            <p className=\"footer-title\"style={{ backgroundColor: '#' }}>\n                <a target=\"_blank\" href=\"https://www.binance.com/en/register?ref=BC0PJGIM/\"style={{ color: '#FFFFFF' }}>Sign up to Binance and earn back 10% commission on all your trades</a>\n            </p>\n            </div>\n          </header>\n          <body className=\"App-body\">\n            <Cards\n              currency={this.state.currency}\n              currency_symbols={this.state.currencySymbols}\n              data={this.state}\n            />\n            <div style={{ width: 500 }}></div>\n\n            <CurrencySettings\n              currencies={this.state.currencies}\n              settings={this.handleSettingsClick}\n              settingsOptions={this.state.settings}\n              onClick={this.handleCurrencyClick}\n              inputValue={this.state.currency}\n            />\n            <SearchBar inputValue={this.state.value} onChange={this.onChange} />\n\n            <CustomizedTables\n              coins={this.state}\n              currency={this.state.currency}\n              currency_symbols={this.state.currencySymbols}\n              settings={this.state.settingsData}\n              pageNumber={this.state.pageNumber}\n              pageSettings={this.state.pageSettings}\n              onClick={this.handlePageChange}\n              searchValue={this.state.value}\n              handleTableHeaderClick={this.handleTableHeaderClick}\n              orderSelection={this.state.orderSelection}\n              coinsOnMoonPay={this.state.coinsOnMoonPay}\n            />\n          </body>\n          <footer className=\"App-footer\">\n            <div className=\"donate\">\n              <p className=\"footer-title\">Donations ❤️</p>\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://www.blockchain.com/btc/address/14Z6pUMZikKGcuBDxxSMHSmrhcUwrAHcNs/\"style={{ color: '#FFFFFF' }}>Bitcoin: 14Z6pUMZikKGcuBDxxSMHSmrhcUwrAHcNs</a>\n              </p>\n\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://etherscan.io/address/0xe44400ea92cD298FA05D7a901362530EC2A51C34/\"style={{ color: '#FFFFFF' }}>Ethereum: 0xe44400ea92cD298FA05D7a901362530EC2A51C34</a>\n              </p>\n\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://bscscan.com/search?f=0&q=bnb1udd4c7dsxrf2gjca9w6y3yau2wujnvxzd8vzla/\"style={{ color: '#FFFFFF' }}>BNB: bnb1udd4c7dsxrf2gjca9w6y3yau2wujnvxzd8vzla</a>\n              </p>\n\n              <p className=\"footer-title\">\n                <a target=\"_blank\" href=\"https://xrpscan.com/account/rfsGFqq8ZHTEbUs3ibvbTVZN8LnvZNT2UY/\"style={{ color: '#FFFFFF' }}>XRP: rfsGFqq8ZHTEbUs3ibvbTVZN8LnvZNT2UY</a>\n              </p>\n\n              <p className=\"footer-title\">\n                Brave Verified Creator\n              </p>\n            </div>\n          </footer>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","/Users/amit/Desktop/Coinbook-master/src/serviceWorker.js",[],"/Users/amit/Desktop/Coinbook-master/src/components/Cards/Cards.js",["76","77","78","79","80","81","82","83"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Cards.css\";\n\nexport default class CustomizedTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      coins: [],\n      currency: this.props.currency,\n      currency_symbols: this.props.currency_symbols,\n      currencyUpdated: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      currencyUpdated: this.props.currency,\n    });\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${this.props.currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            coins: this.manageCoins(result),\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n  componentWillUpdate() {\n    if (this.props.currency !== this.state.currencyUpdated) {\n      console.log(\"lol\");\n      this.setState({\n        currencyUpdated: this.props.currency,\n      });\n      fetch(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${this.props.currency}&order=market_cap_desc&per_page=10&page=1&sparkline=false`\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              coins: this.manageCoins(result),\n            });\n          },\n\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n    } else {\n    }\n  }\n  handleUporDown(coinChange) {\n    if (coinChange > 0) {\n      return \"Card-up\";\n    } else {\n      return \"Card-down\";\n    }\n  }\n  roundDown(number, decimals) {\n    decimals = decimals || 0;\n    return Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n  roundDownPrice(number) {\n    if (number >= 1) {\n      const decimals = 2;\n      const amount =\n        Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n      return amount\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else {\n      const decimals = 4;\n      return (\n        Math.floor(number * Math.pow(10, decimals)) /\n        Math.pow(10, decimals).toString()\n      );\n    }\n  }\n  handleEmoji(coinChange) {\n    if (coinChange < -10) {\n      return <span className=\"emojicard\">💀</span>;\n    } else if (coinChange < 0) {\n      return <span className=\"emojicard\">😕</span>;\n    } else if (coinChange < 10) {\n      return <span className=\"emojicard\">😃</span>;\n    } else if (coinChange < 20) {\n      return <span className=\"emojicard\">🚀</span>;\n    } else if (coinChange > 20) {\n      return <span className=\"emojicard\">🤯</span>;\n    }\n  }\n  manageCoins(coins) {\n    let width = window.innerWidth;\n    const coinOrderByPrice = coins.sort(\n      (a, b) =>\n        parseFloat(b.price_change_percentage_24h) -\n        parseFloat(a.price_change_percentage_24h)\n    );\n    if (width > 768) {\n      return coinOrderByPrice.slice(0, 5);\n    } else {\n      return coinOrderByPrice.slice(0, 3);\n    }\n  }\n\n  render() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins, currency_symbols } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div class=\"loader\">🪙</div>;\n    } else {\n      if (width > 768) {\n        return (\n          <div class=\"row\">\n            <div class=\"column\">\n              {coins.map((coin) => (\n                <div\n                  class={this.handleUporDown(coin.price_change_percentage_24h)}\n                >\n                  <p className=\"card-text\">\n                    <img className=\"image\" src={coin.image} />\n                    {coin.name}{\" \"}\n                  </p>\n\n                  <p className=\"card-info\">\n                    {\n                      this.props.currency_symbols[\n                        this.props.currency.toUpperCase()\n                      ]\n                    }\n                    {this.roundDownPrice(coin.current_price)}\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    {this.roundDown(coin.price_change_percentage_24h, 2)} %\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      } else {\n        return <></>;\n      }\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/MoonPayCheckWhichCoins.js",[],"/Users/amit/Desktop/Coinbook-master/src/components/CustomizedTable/CustomizedTables.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport \"./CustomizedTables.css\";\nimport Chart from \"../Chart/Chart.js\";\nimport PageSettings from \"../PageSettings/pageSettings.js\";\nimport { purple } from \"@material-ui/core/colors\";\nimport MoonPayPopup from \"../MoonPayPopup.js\";\n\nexport default class CustomizedTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coinClicked: \"\",\n      chartDays: 1,\n      redraw: false,\n      currency: this.props.currency,\n      currency_symbols: this.props.currency_symbols,\n      button_color: \"white\",\n      orderSelection: this.props.orderSelection,\n    };\n    this.dateClick = this.dateClick.bind(this);\n    this.buttonStyleForData = this.buttonStyleForData.bind(this);\n  }\n  handleUporDown(coinChange) {\n    if (coinChange > 0) {\n      return \"up\";\n    } else if (coinChange < -10) {\n      return \"crash\";\n    } else {\n      return \"down\";\n    }\n  }\n  handleEmoji(coinChange) {\n    if (coinChange < -20) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < -10) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < -5) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < 0) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < 10) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < 20) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange > 20) {\n      return <span className=\"singleemoji\"></span>;\n    }\n  }\n\n  roundDownPrice(number) {\n    if (number >= 1) {\n      const decimals = 2;\n      const amount =\n        Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n      return amount\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else if (number >= 0.001) {\n      const decimals = 6;\n      return (\n        Math.floor(number * Math.pow(10, decimals)) /\n        Math.pow(10, decimals).toString()\n      );\n    } else {\n      const decimals = 9;\n      return number.toFixed(8).toString();\n    }\n  }\n  roundDown(number, decimals) {\n    decimals = decimals || 0;\n    return Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  handleClick(e) {\n    if (this.state.coinClicked !== e.currentTarget.getAttribute(\"data-item\")) {\n      const coin = e.currentTarget.getAttribute(\"data-item\");\n      const coinSymbol = e.currentTarget.getAttribute(\"data-item-symbol\");\n      this.setState({\n        coinClicked: coin,\n        coinClickedSymbol: coinSymbol,\n      });\n      console.log(\"We need to get the details for \" + coin);\n    } else {\n      this.setState({\n        coinClicked: \"\",\n        coinClickedSymbol: \"\",\n      });\n    }\n    this.chartRender(this.props.coins.id, this.state.chartDays);\n  }\n\n  dateClick(e) {\n    const dayRequest = e.currentTarget.getAttribute(\"data-item\");\n    this.setState({\n      chartDays: dayRequest,\n    });\n  }\n  buttonStyleForData(e) {\n    if (e.currentTarget.getAttribute(\"data-item\") === this.state.chartDays) {\n      return \"btn-2\";\n    } else {\n      return \"btn-1\";\n    }\n  }\n\n  chartRender(coin, days, market_cap, supply, currency) {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    const symbol = this.state.currency_symbols[\n      this.props.currency.toUpperCase()\n    ];\n    const coinSymbol = this.state.coinClickedSymbol;\n    if (coin === this.state.coinClicked) {\n      if (width > 768) {\n        return (\n          <tr className=\"chartandpay\">\n            <td colspan=\"8\">\n              <div class=\"container\">\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"1-days\"\n                  data-item={1}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 day\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"7-days\"\n                  data-item={7}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 week\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={30}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 month\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={90}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  3 months\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={365}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 year\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={730}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  2 years\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={1825}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  5 years\n                </a>\n                <div class=\"container\">\n                <MoonPayPopup\n                  className=\"btn btn-1\"\n                  coin={coin}\n                  symbol={coinSymbol}\n                  coinsOnMoonPay={this.props.coinsOnMoonPay}\n                />\n              </div>\n              </div>\n\n              <Chart\n                id={coin}\n                days={days}\n                redraw={this.state.redraw}\n                currency={this.props.currency}\n                currencysymbols={symbol}\n                coinsOnMoonPay={this.props.coinsOnMoonPay}\n              />\n              <div class=\"container\">\n                <MoonPayPopup\n                  className=\"btn btn-1\"\n                  coin={coin}\n                  symbol={coinSymbol}\n                  coinsOnMoonPay={this.props.coinsOnMoonPay}\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      } else {\n        return (\n          <tr className=\"chartandpay\">\n            <td colspan=\"8\">\n\n              <div class=\"container\">\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"1-days\"\n                  data-item={1}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1D\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"7-days\"\n                  data-item={7}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1W\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={30}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1M\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={90}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  3M\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={365}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1Y\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={730}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  2Y\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={1825}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  5Y\n                </a>\n              </div>\n\n              <Chart\n                id={coin}\n                days={days}\n                redraw={this.state.redraw}\n                currency={this.props.currency}\n                currencysymbols={symbol}\n                coinsOnMoonPay={this.props.coinsOnMoonPay}\n              />\n              <div class=\"container\">\n                <MoonPayPopup\n                  className=\"btn btn-1\"\n                  coin={coin}\n                  symbol={coinSymbol}\n                  coinsOnMoonPay={this.props.coinsOnMoonPay}\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      }\n    } else {\n    }\n  }\n\n  result() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    if (coins.length > 0) {\n      if (width > 768) {\n        const pageSettings = this.props.pageSettings;\n        return coins.map((coin) => (\n          <>\n            <tr\n              key={coin.id}\n              data-item={coin.id}\n              data-item-symbol={coin.symbol}\n              onClick={this.handleClick.bind(this)}\n            >\n              <td>{coin.market_cap_rank}</td>\n              <td className=\"theCoinId\">\n                <p className=\"theCoinIdSec\">\n                  <img src={coin.image} className=\"Coin-Logo\" />\n\n                  {coin.name}\n                  <span className=\"symbol\">{coin.symbol.toUpperCase()}</span>\n                </p>\n              </td>\n              <td>\n                {this.props.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDownPrice(coin.current_price)}\n              </td>\n              <td\n                className={this.handleUporDown(\n                  coin.price_change_percentage_24h\n                )}\n              >\n                {this.roundDown(coin.price_change_percentage_24h, 2)}%\n              </td>\n              <td>\n                {this.state.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDown(coin.total_volume)\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n              <td>\n                {this.state.currency_symbols[this.props.currency.toUpperCase()]}\n                {coin.market_cap\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n              <td>\n                {this.roundDown(coin.circulating_supply)\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n            </tr>\n\n            {this.chartRender(coin.id, this.state.chartDays)}\n          </>\n        ));\n      } else {\n        const pageSettings = this.props.pageSettings;\n        return coins.map((coin) => (\n          <>\n            <tr\n              className=\"idcoin\"\n              key={coin.id}\n              data-item={coin.id}\n              data-item-symbol={coin.symbol}\n              onClick={this.handleClick.bind(this)}\n            >\n              <td className=\"theCoinId\">\n                <p className=\"theCoinIdSec\">\n                  <img src={coin.image} className=\"Coin-Logo\" />\n\n                  {coin.name}\n                  <span className=\"symbol\">{coin.symbol.toUpperCase()}</span>\n                </p>\n              </td>\n              <td>\n                {this.props.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDownPrice(coin.current_price)}\n              </td>\n              <td\n                className={this.handleUporDown(\n                  coin.price_change_percentage_24h\n                )}\n              >\n                {this.roundDown(coin.price_change_percentage_24h, 2)}%\n              </td>\n            </tr>\n            {this.chartRender(\n              coin.id,\n              this.state.chartDays,\n              coin.market_cap.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              this.roundDown(coin.circulating_supply)\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              this.state.currency_symbols[this.props.currency.toUpperCase()]\n            )}\n          </>\n        ));\n      }\n    } else {\n      return <p>No results 😕</p>;\n    }\n  }\n  render() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div class=\"loader\">🪙</div>;\n    } else {\n      if (width > 768) {\n        return (\n          <table>\n            <tr>\n              <th\n                className=\"table-header-button\"\n                data-item=\"market_cap_rank\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Rank\n              </th>\n              <th>Coin</th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"current_price\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Price\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"price_change_percentage_24h\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Change 24H\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"total_volume\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Volume\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"market_cap\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                MarketCap\n              </th>\n              <th>Supply</th>\n            </tr>\n            {this.result()}\n            <tr>\n              <PageSettings\n                pageNumber={this.props.pageNumber}\n                onClick={this.props.onClick}\n                searchValue={this.props.searchValue}\n              />\n            </tr>\n          </table>\n        );\n      } else {\n        return (\n          <table>\n            <tr>\n              <th>Coin</th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"current_price\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Price\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"price_change_percentage_24h\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Change 24H\n              </th>\n            </tr>\n            {this.result()}\n            <tr>\n              <PageSettings\n                pageNumber={this.props.pageNumber}\n                onClick={this.props.onClick}\n                searchValue={this.props.searchValue}\n              />\n            </tr>\n          </table>\n        );\n      }\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/SearchBar/SearchBar.js",["111"],"import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let width = window.innerWidth;\n    if (width > 256) {\n      return (\n        <div class=\"wrapper\">\n          <p className=\"glass\">🔎</p>\n          <input\n            className=\"search\"\n            placeholder=\"Search Coin\"\n            type=\"text\"\n            onChange={this.props.onChange}\n            value={this.props.inputValue}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div class=\"wrapper\">\n          <input\n            className=\"search\"\n            placeholder=\"🔎 Search Coin\"\n            type=\"text\"\n            onChange={this.props.onChange}\n            value={this.props.inputValue}\n          />\n        </div>\n      );\n    }\n  }\n}\nexport default SearchBar;\n","/Users/amit/Desktop/Coinbook-master/src/components/Settings/CurrencySettings.js",["112","113","114","115","116"],"import React from \"react\";\nimport \"./CurrencySettings.css\";\n\nexport default class CurrencySettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: this.props.currencies,\n      settingsOptions: this.props.settingsOptions,\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n    const { currencies, settingsOptions } = this.state;\n    if (width > 768) {\n      return (\n        <span className=\"settings\">\n          <div class=\"dropdown\">\n            <button class=\"dropbtn\">💷</button>\n            <div class=\"dropdown-content\">\n              {currencies.map((currency) => (\n                <a\n                  data-item={currency}\n                  onClick={this.props.onClick}\n                  value={this.props.inputValue}\n                >\n                  {currency.toUpperCase()}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button class=\"dropbtn\">💎</button>\n            <div class=\"dropdown-content\">\n              {settingsOptions.map((setting) => (\n                <a\n                  data-item={setting}\n                  onClick={this.props.settings}\n                  value={this.props.inputValue}\n                >\n                  {setting}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button class=\"app\">🔦</button>\n            <div class=\"dropdown-content\">\n              {settingsOptions.map((setting) => (\n                <a\n                  data-item={setting}\n                  onClick={this.props.settings}\n                  value={this.props.inputValue}\n                >\n                  {setting}\n                </a>\n              ))}\n            </div>\n          </div>\n        </span>\n      );\n    } else {\n      return (\n        <div className=\"settings\">\n          <div class=\"dropdown\">\n            <button class=\"dropbtn1\">💷</button>\n            <div class=\"dropdown-content\" id=\"dropdown-content-1\">\n              {currencies.map((currency) => (\n                <a\n                  data-item={currency}\n                  onClick={this.props.onClick}\n                  value={this.props.inputValue}\n                >\n                  {currency.toUpperCase()}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button class=\"dropbtn2\">💎</button>\n            <div class=\"dropdown-content\" id=\"dropdown-content-2\">\n              {settingsOptions.map((setting) => (\n                <a\n                  data-item={setting}\n                  onClick={this.props.settings}\n                  value={this.props.inputValue}\n                >\n                  {setting}\n                </a>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/MoonPayPopup.js",["117","118"],"import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport Popup from \"reactjs-popup\";\nimport axios from \"axios\";\nimport \"./MoonPayPopup.css\";\n\nexport default class MoonPayPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coinsOnMoonPay: this.props.coinsOnMoonPay,\n      url: `https://buy.moonpay.io?apiKey=pk_live_M4RiDyjN7nnYeRFyBlwDBZzPNlkZHrjn&currencyCode=${this.props.symbol}&colorCode=%23d1004d`,\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n    if (this.state.coinsOnMoonPay.includes(this.props.coin.toLowerCase())) {\n      if (width > 768) {\n        return (\n          <Popup\n            contentStyle={{\n              width: \"400px\",\n              height: \"400px\",\n              padding: \"0px\",\n              borderRadius: \"12px\",\n              boxShadow: `rgb(226, 207, 213) 1.5px 1.5px 3px,\n            rgb(247, 242, 244) -3px -3px 6px -0.5px`,\n              border: \"none\",\n            }}\n            trigger={\n              <a className=\"btn-buy\">\n                <p className=\"buttontext\">\n                  {\" \"}\n                  Buy{\" \"}\n                  {this.props.coin.charAt(0).toUpperCase() +\n                    this.props.coin.slice(1)}{\" \"}\n                  💳\n                </p>\n              </a>\n            }\n            position=\"top left\"\n          >\n            <Iframe\n              allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\n              frameborder=\"0\"\n              height=\"100%\"\n              colorCode=\"%23F0E7EA\"\n              src=\"https://buy-staging.moonpay.io?apiKey=pk_test_123\"\n              width=\"100%\"\n            >\n              <p>Your browser does not support iframes.</p>\n            </Iframe>\n          </Popup>\n        );\n      } else {\n        return (\n          <a className=\"btn-buy\" href={this.state.url}>\n            <p className=\"buttontext\">\n              {\" \"}\n              Buy{\" \"}\n              {this.props.coin.charAt(0).toUpperCase() +\n                this.props.coin.slice(1)}{\" \"}\n              💳\n            </p>\n          </a>\n        );\n      }\n    } else {\n      return <p></p>;\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/PageSettings/pageSettings.js",["119","120","121","122","123","124","125"],"import React from \"react\";\nimport \"./pageSettings.css\";\nexport default class PageSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.pageNumber,\n    };\n  }\n\n  handlePageHandsDown() {\n    if (this.props.searchValue === \"\") {\n      if (this.props.pageNumber > 1) {\n        return (\n          <a\n            className=\"page-button\"\n            onClick={() => {\n              this.props.onClick(\"down\");\n            }}\n          >\n            ⬅️\n          </a>\n        );\n      } else {\n        return <a></a>;\n      }\n    } else {\n    }\n  }\n  handlePageHandsup() {\n    if (this.props.searchValue === \"\") {\n      if (this.props.pageNumber < 25) {\n        return (\n          <a\n            className=\"page-button\"\n            onClick={() => {\n              this.props.onClick(\"up\");\n            }}\n          >\n            ➡️\n          </a>\n        );\n      } else {\n        return <a></a>;\n      }\n    } else {\n    }\n  }\n\n  render() {\n    const { pageNumber } = this.props;\n    return (\n      <td colspan=\"8\">\n        <div class=\"container\">\n          {this.handlePageHandsDown()}\n          <br />\n          <p> Page {this.props.pageNumber} </p>\n          <br />\n          {this.handlePageHandsup()}\n        </div>\n      </td>\n    );\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/Chart/Chart.js",["126","127","128","129","130","131","132","133","134","135","136"],"import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./Chart.css\";\nimport MoonPayPopup from \"../MoonPayPopup.js\";\nimport { withTheme } from \"@material-ui/core\";\n\nconst Chart = (props) => {\n  const [chartData, setChartData] = useState({});\n  const [chartVol, setChartVol] = useState({});\n  const [id] = useState(props.id);\n  const [coinsOnMoonPay] = useState(props.coinsOnMoonPay);\n  const [currency] = useState(props.currency);\n  const [symbol] = useState(props.currencysymbols);\n  const [days] = useState(props.days);\n  const [redraw, setRedraw] = useState({});\n  const convertToBillions = (number) => {\n    if (number > 1000000) {\n      return (\n        (number / 1000000000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n        \"B\"\n      );\n    } else {\n      return number;\n    }\n  };\n  const mobileOrNot = () => {\n    let width = window.innerWidth;\n    if (width > 768) {\n      return <></>;\n    } else {\n      return <br />;\n    }\n  };\n  const chart = (props) => {\n    let daysChart = props.days;\n    let currency = props.currency;\n    let symbol = props.currencysymbols;\n    let time = [];\n    let price = [];\n    let priceSmaller = [];\n    let volume = [];\n    let volumeSmaller = [];\n    let timeSmaller = [];\n    let timeSmallerAndConvertedForVolume = [];\n\n    let timeSmallerAndConverted = [];\n    let whichCoin = id;\n    function roundDownPrice(number) {\n      if (number >= 1) {\n        const decimals = 2;\n        const amount =\n          Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n        return amount.toFixed(2);\n      } else if (number >= 0.001) {\n        const decimals = 6;\n        return (\n          Math.floor(number * Math.pow(10, decimals)) /\n          Math.pow(10, decimals).toFixed(4)\n        );\n      } else {\n        const decimals = 9;\n        return (\n          Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals)\n        );\n      }\n    }\n    axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${whichCoin}/market_chart?vs_currency=${currency}&days=${daysChart}`\n      )\n      .then((res) => {\n        console.log(res);\n        for (const dataObj of res.data.prices) {\n          time.push(dataObj[0]);\n          price.push(dataObj[1]);\n        }\n        console.log(price);\n\n        for (var i = 0; i < price.length; i = i + 1) {\n          priceSmaller.push(roundDownPrice(price[i]));\n        }\n        for (var i = 0; i < time.length; i++) {\n          timeSmaller.push(time[i]);\n        }\n        for (var i = 0; i < timeSmaller.length; i++) {\n          timeSmallerAndConverted.push(moment(timeSmaller[i]).format(\"lll\"));\n        }\n        for (const dataObj of res.data.total_volumes) {\n          time.push(dataObj[0]);\n          volume.push(dataObj[1]);\n        }\n        console.log(volume);\n\n        for (var i = 0; i < volume.length; i = i + 4) {\n          volumeSmaller.push(volume[i]);\n        }\n        for (var i = 0; i < timeSmallerAndConverted.length; i = i + 4) {\n          timeSmallerAndConvertedForVolume.push(timeSmallerAndConverted[i]);\n        }\n        setChartData({\n          labels: timeSmallerAndConverted,\n          datasets: [\n            {\n              label: \"Price\",\n              backgroundColor: \"#5C68FF\",\n\n              borderWidth: \"0px\",\n              data: priceSmaller,\n            },\n          ],\n        });\n        setChartVol({\n          labels: timeSmallerAndConvertedForVolume,\n          datasets: [\n            {\n              label: \"Volume\",\n              backgroundColor: \"#222222\",\n              borderColor: \"rgba(135, 99, 225, 1)\",\n              data: volumeSmaller,\n            },\n          ],\n        });\n\n        setRedraw(true);\n        setRedraw(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    chart(props);\n  }, [props]);\n  return (\n    <div className=\"charts-div\">\n      <td className=\"charts\">\n        <p className=\"chart-name\">Price</p>\n        <Line\n          redraw={redraw}\n          data={chartData}\n          options={{\n            legend: {\n              display: false,\n            },\n            tooltips: {\n              displayColors: false,\n              mode: \"x-axis\",\n\n              backgroundColor: \"#FFFFFF\",\n              bodyFontColor: \"#000000\",\n              titleFontColor: \"#000000\",\n              borderWidth: 1,\n              borderColor: \"#F0F0F0\",\n              callbacks: {\n                label: function (tooltipItems) {\n                  if (tooltipItems.yLabel > 1) {\n                    return (\n                      symbol +\n                      tooltipItems.yLabel\n                        .toString()\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    );\n                  } else {\n                    return symbol + tooltipItems.yLabel.toString();\n                  }\n                },\n              },\n            },\n            responsive: true,\n            title: { text: \"SCALE\", display: false },\n            elements: {\n              point: {\n                radius: 0,\n              },\n              line: {\n                tension: 0.05,\n              },\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: false,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      if (value > 1) {\n                        return (\n                          props.currencysymbols +\n                          value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        );\n                      } else {\n                        return props.currencysymbols + value.toString();\n                      }\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    maxTicksLimit: 4,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return value.split(\",\")[0];\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </td>\n      {mobileOrNot()}\n      <td className=\"charts-vol\">\n        <p className=\"chart-name\">Volume</p>\n        <Bar\n          redraw={redraw}\n          data={chartVol}\n          options={{\n            legend: {\n              display: false,\n            },\n            tooltips: {\n              displayColors: false,\n              mode: \"x-axis\",\n              backgroundColor: \"#FFFFFF\",\n              bodyFontColor: \"#000000\",\n              titleFontColor: \"#000000\",\n              borderWidth: 1,\n              borderColor: \"#F0F0F0\",\n              callbacks: {\n                label: function (tooltipItems) {\n                  return (\n                    symbol +\n                    tooltipItems.yLabel\n                      .toFixed(0)\n                      .toString()\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  );\n                },\n              },\n            },\n            responsive: true,\n            title: { text: \"SCALE\", display: false },\n            elements: {\n              point: {\n                radius: 0,\n              },\n              line: {\n                tension: 0.05,\n              },\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return props.currencysymbols + convertToBillions(value);\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    maxTicksLimit: 4,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return value.split(\",\")[0];\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </td>\n    </div>\n  );\n};\n\nexport default Chart;\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":32},{"ruleId":"141","severity":1,"message":"145","line":87,"column":14,"nodeType":"143","messageId":"144","endLine":87,"endColumn":32},{"ruleId":"141","severity":1,"message":"145","line":144,"column":14,"nodeType":"143","messageId":"144","endLine":144,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":196,"column":24,"nodeType":"148","messageId":"149","endLine":196,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":205,"column":7,"nodeType":"152","messageId":"153","endLine":218,"endColumn":8},{"ruleId":"141","severity":1,"message":"154","line":207,"column":11,"nodeType":"143","messageId":"144","endLine":207,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":221,"column":7,"nodeType":"152","messageId":"153","endLine":233,"endColumn":8},{"ruleId":"155","severity":1,"message":"156","line":382,"column":16,"nodeType":"157","messageId":"158","endLine":382,"endColumn":120,"fix":"159"},{"ruleId":"160","severity":1,"message":"161","line":387,"column":17,"nodeType":"157","endLine":387,"endColumn":53},{"ruleId":"155","severity":1,"message":"156","line":437,"column":17,"nodeType":"157","messageId":"158","endLine":437,"endColumn":146,"fix":"162"},{"ruleId":"155","severity":1,"message":"156","line":441,"column":17,"nodeType":"157","messageId":"158","endLine":441,"endColumn":144,"fix":"163"},{"ruleId":"155","severity":1,"message":"156","line":445,"column":17,"nodeType":"157","messageId":"158","endLine":445,"endColumn":148,"fix":"164"},{"ruleId":"155","severity":1,"message":"156","line":449,"column":17,"nodeType":"157","messageId":"158","endLine":449,"endColumn":135,"fix":"165"},{"ruleId":"160","severity":1,"message":"161","line":465,"column":17,"nodeType":"157","endLine":465,"endColumn":53},{"ruleId":"155","severity":1,"message":"156","line":471,"column":17,"nodeType":"157","messageId":"158","endLine":471,"endColumn":121,"fix":"166"},{"ruleId":"155","severity":1,"message":"156","line":510,"column":17,"nodeType":"157","messageId":"158","endLine":510,"endColumn":146,"fix":"167"},{"ruleId":"155","severity":1,"message":"156","line":514,"column":17,"nodeType":"157","messageId":"158","endLine":514,"endColumn":144,"fix":"168"},{"ruleId":"155","severity":1,"message":"156","line":518,"column":17,"nodeType":"157","messageId":"158","endLine":518,"endColumn":148,"fix":"169"},{"ruleId":"155","severity":1,"message":"156","line":522,"column":17,"nodeType":"157","messageId":"158","endLine":522,"endColumn":135,"fix":"170"},{"ruleId":"141","severity":1,"message":"171","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":20},{"ruleId":"141","severity":1,"message":"172","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":12},{"ruleId":"141","severity":1,"message":"173","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":19},{"ruleId":"141","severity":1,"message":"174","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":19},{"ruleId":"141","severity":1,"message":"175","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"176","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":18},{"ruleId":"141","severity":1,"message":"177","line":132,"column":37,"nodeType":"143","messageId":"144","endLine":132,"endColumn":53},{"ruleId":"160","severity":1,"message":"161","line":147,"column":21,"nodeType":"157","endLine":147,"endColumn":63},{"ruleId":"141","severity":1,"message":"178","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"179","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"180","line":67,"column":13,"nodeType":"143","messageId":"144","endLine":67,"endColumn":21},{"ruleId":"141","severity":1,"message":"181","line":110,"column":13,"nodeType":"143","messageId":"144","endLine":110,"endColumn":18},{"ruleId":"141","severity":1,"message":"182","line":110,"column":20,"nodeType":"143","messageId":"144","endLine":110,"endColumn":28},{"ruleId":"141","severity":1,"message":"183","line":110,"column":30,"nodeType":"143","messageId":"144","endLine":110,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":121,"column":17,"nodeType":"157","endLine":127,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":130,"column":17,"nodeType":"157","endLine":136,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":139,"column":17,"nodeType":"157","endLine":145,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":148,"column":17,"nodeType":"157","endLine":154,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":157,"column":17,"nodeType":"157","endLine":163,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":166,"column":17,"nodeType":"157","endLine":172,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":175,"column":17,"nodeType":"157","endLine":181,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":219,"column":17,"nodeType":"157","endLine":225,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":228,"column":17,"nodeType":"157","endLine":234,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":237,"column":17,"nodeType":"157","endLine":243,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":246,"column":17,"nodeType":"157","endLine":252,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":255,"column":17,"nodeType":"157","endLine":261,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":264,"column":17,"nodeType":"157","endLine":270,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":273,"column":17,"nodeType":"157","endLine":279,"endColumn":18},{"ruleId":"141","severity":1,"message":"181","line":310,"column":13,"nodeType":"143","messageId":"144","endLine":310,"endColumn":18},{"ruleId":"141","severity":1,"message":"182","line":310,"column":20,"nodeType":"143","messageId":"144","endLine":310,"endColumn":28},{"ruleId":"141","severity":1,"message":"186","line":313,"column":15,"nodeType":"143","messageId":"144","endLine":313,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":325,"column":19,"nodeType":"157","endLine":325,"endColumn":65},{"ruleId":"141","severity":1,"message":"186","line":365,"column":15,"nodeType":"143","messageId":"144","endLine":365,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":377,"column":19,"nodeType":"157","endLine":377,"endColumn":65},{"ruleId":"141","severity":1,"message":"183","line":413,"column":30,"nodeType":"143","messageId":"144","endLine":413,"endColumn":35},{"ruleId":"187","severity":1,"message":"188","line":5,"column":3,"nodeType":"189","messageId":"190","endLine":7,"endColumn":4},{"ruleId":"184","severity":1,"message":"185","line":23,"column":17,"nodeType":"157","endLine":27,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":37,"column":17,"nodeType":"157","endLine":41,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":51,"column":17,"nodeType":"157","endLine":55,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":70,"column":17,"nodeType":"157","endLine":74,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":84,"column":17,"nodeType":"157","endLine":88,"endColumn":18},{"ruleId":"141","severity":1,"message":"191","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"185","line":32,"column":15,"nodeType":"157","endLine":32,"endColumn":38},{"ruleId":"184","severity":1,"message":"185","line":15,"column":11,"nodeType":"157","endLine":20,"endColumn":12},{"ruleId":"192","severity":1,"message":"193","line":25,"column":16,"nodeType":"157","endLine":25,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":25,"column":16,"nodeType":"157","endLine":25,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":34,"column":11,"nodeType":"157","endLine":39,"endColumn":12},{"ruleId":"192","severity":1,"message":"193","line":44,"column":16,"nodeType":"157","endLine":44,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":44,"column":16,"nodeType":"157","endLine":44,"endColumn":19},{"ruleId":"141","severity":1,"message":"194","line":51,"column":13,"nodeType":"143","messageId":"144","endLine":51,"endColumn":23},{"ruleId":"141","severity":1,"message":"195","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":20},{"ruleId":"141","severity":1,"message":"196","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":19},{"ruleId":"141","severity":1,"message":"197","line":13,"column":10,"nodeType":"143","messageId":"144","endLine":13,"endColumn":24},{"ruleId":"141","severity":1,"message":"198","line":14,"column":10,"nodeType":"143","messageId":"144","endLine":14,"endColumn":18},{"ruleId":"141","severity":1,"message":"199","line":16,"column":10,"nodeType":"143","messageId":"144","endLine":16,"endColumn":14},{"ruleId":"141","severity":1,"message":"200","line":39,"column":9,"nodeType":"143","messageId":"144","endLine":39,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":84,"column":18,"nodeType":"143","messageId":"203","endLine":84,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":87,"column":18,"nodeType":"143","messageId":"203","endLine":87,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":96,"column":18,"nodeType":"143","messageId":"203","endLine":96,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":99,"column":18,"nodeType":"143","messageId":"203","endLine":99,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":136,"column":6,"nodeType":"206","endLine":136,"endColumn":13,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'MoonPayCheckWhichCoins' is defined but never used.","Identifier","unusedVar","'checkLocalStorageS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'displayedCoins' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"210","text":"211"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"212","text":"211"},{"range":"213","text":"211"},{"range":"214","text":"211"},{"range":"215","text":"211"},{"range":"216","text":"211"},{"range":"217","text":"211"},{"range":"218","text":"211"},{"range":"219","text":"211"},{"range":"220","text":"211"},"'makeStyles' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'currency_symbols' is assigned a value but never used.","'Iframe' is defined but never used.","'purple' is defined but never used.","'decimals' is assigned a value but never used.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'coins' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'pageSettings' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'pageNumber' is assigned a value but never used.","'MoonPayPopup' is defined but never used.","'withTheme' is defined but never used.","'coinsOnMoonPay' is assigned a value but never used.","'currency' is assigned a value but never used.","'days' is assigned a value but never used.","'symbol' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["221"],"no-global-assign","no-unsafe-negation",[11352,11352]," rel=\"noreferrer\"",[13486,13486],[13740,13740],[14007,14007],[14256,14256],[15010,15010],[16718,16718],[16972,16972],[17239,17239],[17488,17488],{"desc":"222","fix":"223"},"Update the dependencies array to be: [chart, props]",{"range":"224","text":"225"},[3930,3937],"[chart, props]"]